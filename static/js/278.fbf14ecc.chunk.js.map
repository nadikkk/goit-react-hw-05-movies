{"version":3,"file":"static/js/278.fbf14ecc.chunk.js","mappings":"sSAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACcL,EAASM,IAAI,qBAD3B,cACCC,EADD,yBAEEA,GAFF,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACcT,EAASM,IAAT,gBAAsBG,IADpC,cACCF,EADD,yBAEEA,GAFF,kEAIA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACaT,EAASM,IAAT,gBAAsBG,EAAtB,aADb,cACAF,EADA,yBAECA,GAFD,kEAIC,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAkCF,GAAlC,uFACYT,EAASM,IAAT,gBAAsBG,EAAtB,aADZ,cACDF,EADC,yBAEAA,GAFA,kEAIA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACYb,EAASM,IAAT,eAA6B,CAACH,OAAQ,CAACU,MAAAA,KADnD,cACDN,EADC,yBAEAA,GAFA,kE,oFCrBO,SAASO,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAC9BC,GAAWC,EAAAA,EAAAA,MAChB,OACD,8BACA,wBACGF,EAAOG,KAAI,YAA0B,IAAvBT,EAAsB,EAAtBA,GAAIU,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC1B,OACA,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaZ,GAAMa,MAAO,CAAEC,KAAMP,GAA1C,SAAuDG,GAAgBC,KADhEX,EAIR,OAIH,C,4HCbc,SAASe,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMhB,EAAQe,EAAatB,IAAI,SAmB/B,OARAwB,EAAAA,EAAAA,YAAU,YACRlB,EAAAA,EAAAA,IAAkBC,GACfkB,MAAK,YAAe,IAAZxB,EAAW,EAAXA,KACPmB,EAAUnB,EAAKyB,QAChB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACrB,KAGF,gCACE,kBAAMwB,SAlBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfZ,EAAgB,CAAEhB,MAAO2B,EAAKE,SAAS7B,MAAM8B,MAAMC,SAEnDJ,EAAKK,OACN,EAYG,WACE,kBACEC,KAAK,OACL1B,KAAK,WAGP,mBAAQ0B,KAAK,SAAb,wBAEF,SAAC,IAAD,CAAY/B,OAAQA,MAGzB,C","sources":["api/api.js","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '227641d46d0a2022c59812f4f87d3e4f',\n  },\n});\n\nexport async function fetchMovies() {\n  const data = await instance.get('trending/all/week');\n  return data;\n}\nexport async function fetchMoviesId(id) {\n  const data = await instance.get(`movie/${id}`);\n  return data;\n}\nexport async function fetchMoviesCast(id) {\n\tconst data = await instance.get(`movie/${id}/credits`);\n\treturn data;\n }\n export async function fetchMoviesReviews(id) {\n\tconst data = await instance.get(`movie/${id}/reviews`);\n\treturn data;\n }\n export async function fetchMoviesSearch(query) {\n\tconst data = await instance.get(`search/movie`, {params: {query}});\n\treturn data;\n }\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n// import css from '../MoviesList/MoviesList.module.css';\n\nexport default function MoviesList({ movies }) {\n\tconst location = useLocation();\n  return (\n\t<section>\n\t<ul>\n\t  {movies.map(({ id, title, name }) => {\n\t\t return (\n\t\t\t<li key={id}>\n\t\t\t  <Link to={`/movies/${id}`} state={{ from: location }}>{title ? title : name}</Link>\n\t\t\t</li>\n\t\t );\n\t  })}\n\t</ul>\n </section>\n  );\n}\n\nMoviesList.propTypes = {\n\tmovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      title: PropTypes.string,\n      id: PropTypes.number,\n    })\n  ).isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesSearch } from 'api/api';\nimport MoviesList from 'components/MoviesList/MoviesList';\n// import css from '../Movies/Movies.module.css';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n//   console.log(query);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value.trim() });\n   //  console.log(e);\n    form.reset();\n  };\n\n  useEffect(() => {\n    fetchMoviesSearch(query)\n      .then(({ data }) => {\n        setMovies(data.results);\n      })\n      .catch(error => console.log(error));\n  }, [query]);\n\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          //   onChange={e => setSearchParams({ query: e.target.value })}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <MoviesList movies={movies} />\n    </section>\n  );\n}\n"],"names":["instance","axios","baseURL","params","api_key","fetchMovies","get","data","fetchMoviesId","id","fetchMoviesCast","fetchMoviesReviews","fetchMoviesSearch","query","MoviesList","movies","location","useLocation","map","title","name","to","state","from","Movies","useState","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","then","results","catch","error","console","log","onSubmit","e","preventDefault","form","currentTarget","elements","value","trim","reset","type"],"sourceRoot":""}